<?php
session_start(); // Start session to use session variables

// Check if $_SESSION['notif'] is set and display it
$notif = isset($_SESSION['notif']) ? $_SESSION['notif'] : "";

// Unset the session variable to clear the message after displaying
unset($_SESSION['notif']);

?>


 $_SESSION['notif'] = $e->getMessage();
            header("Location: 2AdminStudents.php"); // Redirect with error message
            exit;



// public function validate() {
    //     // Include the database connection file
    //     include "connection.php";
    
    //     try {
    //         // Prepare a SQL statement to check for existing user
    //         $stmt = $conn->prepare("SELECT 1 FROM Account WHERE userName = ? AND fName = ? AND lName = ?");
    //         if (!$stmt) {
    //             throw new Exception("Failed to prepare statement: " . $conn->error);
    //         }
    
    //         // Bind the input parameters to the prepared statement
    //         $stmt->bind_param('sss', $this->username, $this->fName, $this->lName);
    //         $stmt->execute();
    
    //         // Fetch the results
    //         $result = $stmt->get_result();
    //         if (!$result) {
    //             throw new Exception("Failed to get result: " . $stmt->error);
    //         }
    
    //         // Check the number of rows in the result
    //         if ($result->num_rows > 0) {
    //             // If rows are found, data exists, return false
    //             return false;
    //         } else {
    //             // If no rows are found, data does not exist, return true
    //             return true;
    //         }
    //     } catch (Exception $e) {
    //         // Optionally, handle exceptions and errors if necessary
    //         error_log('Error in validate function: ' . $e->getMessage());
    //         return null; // Or consider re-throwing the exception depending on your error handling strategy
    //     }
    // }